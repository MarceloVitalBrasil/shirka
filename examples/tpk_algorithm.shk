------------------------------------------------------------------------------
--                                                                          --
--                       Trabb Pardo–Knuth algorithm                        --
--                                                                          --
-- This program implements the Trabb Pardo–Knuth algorithm as found at      --
-- http://en.wikipedia.org/wiki/Trabb_Pardo%E2%80%93Knuth_algorithm         --
--                                                                          --
------------------------------------------------------------------------------

-- At the time this program is written, the Shirka interpreter only provides
-- a minimal set of operations; thus we need to write several utility
-- operations before considering the algorithm itself. Most are low-level
-- operations concerned with stack management and recursion. They are not very
-- readable, but they do not need to be understood in detail.

-- STACK MANIPULATION
(=> >>) [ -> x x <- x ]         -- Duplicate an object
(=> <<) [ -> x ]                -- Delete an object
(=> ><) [ -> x -> y <- x <- y ] -- Swap two objects

-- VALUE DISPLAY
(=> puts)
  [ print '\n print ]

-- CONDITIONAL EXECUTION
(=> if)
  [ uncons -> iftrue
    uncons -> iffalse
    <<
    -> cond
    cond     iftrue  !?
    cond not iffalse !? ]

-- CONDITIONAL LOOPING
(=> while)
  [ => cond
    => op
    [ cond [ op tail ] !? ] => tail
    tail ]

-- COUNTED LOOPING
(=> times)
  [ ><
    => op2
    ([>> 0 >] while)
      [ 1 - -> count
        op2
        <- count ]
    << ]

-- LIST ITERATION
(=> each)
  [ => op-each
    length -> n
    (n times)
      [ uncons op-each ]
    << ]

-- LIST REVERSING
(=> list/reverse)
  [ "" ><
    ([length 0 = not] while)
      [ -> src
        -> dest
        <- src uncons -> el -> src
        <- dest <- el cons
        <- src ]
      << ]

-- USER INPUT
(=> gets)
  [ "" TRUE
    ([] while)
      [ getc
        >> '\n = not
        (if)
          [ [ cons              TRUE  ]
            [ cons list/reverse FALSE ] ] ] ]

-- USER INPUT
(=> get-value)
  [ gets $parse
    length 1 =
    (if)
      [ [ uncons >< << ]
        [ abort        ] ] ]

------------------------------------------------------------------------------
-- The following is the Trabb Pardo–Knuth algorithm itself.                 --
------------------------------------------------------------------------------

(=> f)  -- Operation computing |n|^0.5 + 5*n^3
  [ -> n
    n abs 0.5 ^
    n 3 ^ 5 *
    + ]

"Please enter 11 numbers:" puts

[]  -- Numbers given by the user are stored in this list

(11 times)
  [ get-value cons ]

(each)
  [ f
    >> 400 >  -- is the result of `f' greater than 400?
    (if)
      [ [ << "Overflow!" puts ]
        [                puts ] ] ]
